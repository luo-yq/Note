1. 

简介

Nagios 是一款自动化运维工具，可以协助运维人员监控服务器的运行状况，并且拥有报警功能。

根据本文可以完成 Nagios 的基础安装：
Nagios 核心及插件将安装在/usr/local/nagios
Nagios 核心会配置好监控当前服务器的一些基本信息
可以通过网页访问 Nagios 的 web 界面 http://localhost/nagios/

#准备工作
#本文 Nagios 的安装将从官网获取最新的源码包进行编译，因此需要服务器拥有编译环境，同时 
#Nagios 的 Web界面需要有 Web 服务器和 PHP 运行环境。本文 Web 服务器使用 Apache，用户也可以自行选择使用其他 Web 服务器。
yum -y install httpd php
yum -y install gcc glibc glibc-common unzip
yum -y install gd gd-devel
#安装步骤
#创建 nagios 用户并设置密码
/usr/sbin/useradd -m nagios
passwd nagios
/usr/sbin/useradd -m apache
passwd apache
#创建 nagcmd 用户组，将 nagios 和 apache（web 服务器的运行用户） 用户添加至该组
/usr/sbin/groupadd nagcmd
/usr/sbin/usermod -a -G nagcmd nagios
/usr/sbin/usermod -a -G nagcmd apache

  
#下载 Nagios 及其插件
wget https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.2.1.tar.gz
wget https://nagios-plugins.org/download/nagios-plugins-2.2.1.tar.gz
#Nagios 核心的编译与安装
tar -zxvf nagios-4.2.1.tar.gz
cd nagios-4.2.1

#查看允许的cgi目录
suexec -V    

#编译配置信息 --prefix=/var/www/nagios
./configure --with-command-group=nagcmd --prefix=/var/www/nagios
#编译
make all
#安装 Nagios，并初始化脚本及基础配置文件
make install
make install-init
make install-config
make install-commandmode
#此时先不用启动 Nagios，安装步骤尚未完成

#目录的执行权限和属主都有严格要求
#chmod -R 755 /var/www/nagios/sbin
#chown -R nagios.nagcmd /var/www/nagios/sbin

#自定义配置信息
#配置文件在目录 /var/www/nagios/etc 下，通过这些基础配置信息可以直接启动 Nagios， 更改的是联系人信息，可以编辑 /var/www/nagios/etc/objects/contacts.cfg 。
 
#切换目录到安装路径（这里是/var/www/nagios）。Nagios 各个目录用途说明如下：
#bin	Nagios 可执行程序所在目录
#etc	Nagios 配置文件所在目录
#sbin	Nagios CGI 文件所在目录，也就是执行外部命令所需文件所在的目录
#share	Nagios网页文件所在的目录
#libexec	Nagios 外部插件所在目录
#var	Nagios 日志文件、lock 等文件所在的目录
#var/archives	Nagios 日志自动归档目录
#var/rw	用来存放外部命令文件的目录


#配置 web 服务器
#创建 Apache 的配置文件，配置文件在目录 /etc/httpd/conf.d/
make install-webconf
#为 Nagios 的 Web 界面创建 nagiosadmin 用户，并设置密码。
htpasswd -c /var/www/nagios/etc/htpasswd.users nagiosadmin


#编译并安装 Nagios 插件包

#Nagios 实际的监控脚本都是通过插件实现的，本文中的插件包是官方提供插件包（大约50个用于监控的插件），当然也可以自己编写插件。

#解压插件包
cd ~
tar -zxvf nagios-plugins-2.2.1.tar.gz
cd nagios-plugins-2.2.1
#编译并安装
./configure --with-nagios-user=nagios --with-nagios-group=nagios
make
make install
 
#启动 Nagios 核心
#将 Nagios 核心加入自动启动列表
chkconfig --add nagios
chkconfig nagios on
 
#检查 Nagios 基础配置文件（在之后修改过配置文件后，都可以用下边的方式进行检查）
mkdir -p /var/www/nagios/var/spool/checkresults/
chmod 777 /var/www/nagios/var/spool/checkresults/
/usr/local/nagios/bin/nagios -v /var/www/nagios/etc/nagios.cfg
 
#如果没有错误，就可以直接启动 Nagios

 
#SELinux 设置

#Centos 系统默认 SELinux 是 Enforcing 模式，这会导致访问 Nagios CGIs 时出现 Internal Server Error 的错误。为避免这个错误可以直接关闭 SELinux 或者将其设置为 Permissive 模式。SELinux配置文件在/etc/selinux/config。注意，修改 SELinux 配置后需要重新启动操作系统。

#如果不想关闭 SELinux 或者将其设置为 Permissive ，即在 enforcing/targeted 模式下可以使用如下命令进行设置

chcon -R -t httpd_sys_content_t /var/www/nagios/sbin/
chcon -R -t httpd_sys_content_t /var/www/nagios/share/

#重启系统
#启动 Apache
systemctl start httpd
#启动 nagios
systemctl start nagios
#登录 Web 界面查看

访问 http://localhost/nagios，通过 nagiosadmin 用户及刚才设置的密码登录。

点击左侧目录中的 Service，可以查看当前监控的服务。


10 其他配置

至此，Nagios 的基础安装就结束了。这里还要补充说明的一下，服务器的防火墙需要允许 apache 80 端口的访问，可以通过如下命令设置防火墙，允许 80 端口的访问。

firewall-cmd --zone=public --add-port=80/tcp --permanent
firewall-cmd --reload
 
目前，Nagios 还无法发送邮件进行报警，还没有配置用于发送邮件的程序，这部分将不在本文中进行讨论，在后续的文章中会逐步讲解。






概要

本文描述如何监控 Linux/UNIX 主机的系统属性和本地服务，例如：

CPU 负载
内存占用
磁盘使用
当前登录用户
运行进程
Linux/UNIX 主机的公共服务，例如 HTTP，SSH 等不在本文的讨论范围内，本文仅仅描述如上所述的系统属性和本地服务。

简介

有很多方法可以监控 Linux/Unix 主机的系统属性和本地服务，例如可以通过利用 SSH 登录远程主机，执行监控命令，Nagios 也提供了这种方式的插件 check_by_ssh，通过这个插件可以执行被监控主机上的监控命令。这里并不推荐使用这种方法，因为当需要监控很多主机时，频繁创建和销毁 SSH 连接会非常影响监控服务器的性能。

另一种常用的方法是使用 NRPE 插件来实现监控远程主机的，NRPE 使你可以执行远程 Linux/UNIX 主机上的监控命令：

NEPR

NRPE 插件由两部分组成：

NRPE： NRPE 是运行在远程被监控的主机上的代理程序，接收有 Nagios 服务器通过 check_nrpe 发送的检查请求。当收到检查请求时，它会按照请求要求执行相应的检查命令，然后将结果返回给 Nagios 监控服务器。

check_nrpe：这个监控插件运行在 Nagios 服务器，用来与远程主机上的 NRPE 代理程序交互。使用这个插件时，它会告诉远程主机上 NRPE 代理程序需要监控的项目，收到返回结果后，它会将其转为自己的输出代码输出结果。

Nagios 服务端安装 check_nrpe 插件

编译 NRPE 插件时需要安装 openssl-devel

yum install openssl-devel
1
下载 NRPE 软件包，可以前往 https://exchange.nagios.org/ 搜索最新的软件包

wget https://github.com/NagiosEnterprises/nrpe/archive/3.0.1.tar.gz
1
解压缩

tar -zxvf 3.0.1.tar.gz
cd 3.0.1
1
2
编译并安装插件

./configure
make all
make install-plugin
1
2
3
安装完成后就可以在 /usr/local/nagios/libexec 下找到 check_nrpe 插件。

被监控主机上安装 Nagios 插件及 NRPE 代理

准备工作

安装编译环境

yum install gcc glibc glibc-common unzip openssl-devel
1
创建 nagios 用户，可以将 nagios 用户设置为不可登录

useradd nagios
1
安装nagios 插件

下载 nagios 插件

 wget https://nagios-plugins.org/download/nagios-plugins-2.1.2.tar.gz
1
解压缩并安装

tar -zxvf nagios-plugins-2.1.2.tar.gz
cd nagios-plugins-2.1.2
./configure
make
make install
1
2
3
4
5
设置权限

chown nagios:nagios /usr/local/nagios
chown -R nagios:nagios /usr/local/nagios/libexec
1
2
安装 xinetd

xinetd 是 Linux 下的守护进程，稍后安装的 NRPE 将托管在 xinetd 下。

这种方式的优点是空闲时只有 xinetd 这一守护进程占有系统资源，而托管在它上边的其他的内部服务不会一直占有系统资源，只有请求到来时才会被 xinetd 唤醒。并且通过 xinetd 还可以对它所管理的内部进程设置相应的访问权限。

yum install xinetd
1
安装 NRPE

载 NRPE 软件包，可以前往 https://exchange.nagios.org/ 搜索最新的软件包

wget https://github.com/NagiosEnterprises/nrpe/archive/3.0.1.tar.gz
1
解压缩

tar -zxvf 3.0.1.tar.gz
cd 3.0.1
1
2
编译并安装插件及配置文件

./configure
make all

make install-plugin
make install-daemon
make install-config
make install-inetd
1
2
3
4
5
6
7
不同版本的 nrpe 安装参数有可能不一致，运行 make 可以列出所有的参数

修改 nrpe 配置 vi /usr/local/nagios/etc/nrpe.cfg，将 server_address 修改为 Nagios 服务器地址。

server_address=192.168.1.200
1
配置 xinetd，编辑 /etc/xinetd.d/nrpe

 vi /etc/xinetd.d/nrpe 
1
将下列行中允许访问的 ip 地址改为 Nagios 服务器的地址，并开启服务

service nrpe
{
    disable         = no   \\注意将这里修改成no
    socket_type     = stream
    port            = 5666
    wait            = no
    user            = nagios
    group           = nagios
    server          = /usr/local/nagios/bin/nrpe
    server_args     = -c /usr/local/nagios/etc/nrpe.cfg --inetd
    only_from       = <nagios_ip_address>  \\ 设置为nagios服务器地址
    log_on_failure  += USERID
}
1
2
3
4
5
6
7
8
9
10
11
12
13
将 nrpe 服务说明添加至 /etc/services

nrpe            5666/tcp                # NRPE
1
设置防火墙

firewall-cmd --zone=public --add-port=5666/tcp --permanent
firewall-cmd --reload
1
2
启动 xinetd

systemctl start xinetd
1
此时可以回到监控服务器上，运行插件检查

/usr/local/nagios/libexec/check_nrpe -H 192.168.1.201
1
返回 nrpe 版本就说明远程主机上 nrpe 安装正确。

配置 Nagios

command 定义

vi /usr/local/nagios/etc/objects/commands.cfg 
1
插入如下定义：

define command {
    command_name check_nrpe
    command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}
1
2
3
4
新建 linux 服务器配置文件 linux.cfg

vi /usr/local/nagios/etc/objects/linux.cfg 
1
主机定义

define host{
    use             linux-server
    host_name       linuxserver
    alias           My linux Server
    address         192.168.1.201
}
1
2
3
4
5
6
use： 使用模板 linux-server
host_name：主机名称
alias：别名或描述
address： IP地址
监控服务定义

设置监控 CPU 负载

define service{
    use generic-service
    host_name linuxserver
    service_description CPU Load
    check_command check_nrpe!check_load
}
1
2
3
4
5
6
设置监控当前登录用户

define service{
    use generic-service
    host_name linuxserver
    service_description Current Users
    check_command check_nrpe!check_users
}
1
2
3
4
5
6
设置监控磁盘 /dev/hda1 的使用情况

define service{
    use generic-service
    host_name linuxserver
    service_description /dev/hda1 Free Space
    check_command check_nrpe!check_hda1
}
1
2
3
4
5
6
设置监控进程数

define service{
    use generic-service
    host_name linuxserver
    service_description Total Processes
    check_command check_nrpe!check_total_procs
}
1
2
3
4
5
6
集中说明一下，在 check_command 定义中，check_nrpe 后边连接的就是远程主机中定义的监控命令，远程主机的定义可以在远程主机的 /usr/local/nagios/etc/nrpe.cfg 中查看到：

command[check_users]=/usr/local/nagios/libexec/check_users -w 5 -c 10
command[check_load]=/usr/local/nagios/libexec/check_load -w 15,10,5 -c 30,25,20
command[check_hda1]=/usr/local/nagios/libexec/check_disk -w 20% -c 10% -p /dev/hda1
command[check_total_procs]=/usr/local/nagios/libexec/check_procs -w 150 -c 200
1
2
3
4
重新启动 nagios 服务，就可以看到新增的监控主机





Nagios 监控网络设备
原创 2016年10月22日 17:19:23 标签：路由器 /交换机 /nagios /网络设备 /监控 529
概述

本文描述如何通过 Nagios 监控网络设备（例如交换机、路由器等）。监控网络设备的前提是网络设备需要有一个 IP 地址，否则 Nagios 是无法进行监控的。Nagios 可以通过 ping 监控网络设备的连通性（例如丢包和延迟）；如果网络设备支持 snmp，那么还可以通过 snmp 协议监控网络设备的性能信息，流量信息。

Nagios 监控网络设备

准备工作

check_snmp 插件是 Nagios 基础插件库中存在的，如果发现在安装完 Nagios 的基础插件库后没有这个插件，这说明在编译的时候这个插件并未成功编译，原因可能是没有找到其所需的库。如果是这个问题，那么安装 net-snmp 的相关环境，重新编译插件库就可以了。

运行下边命令，安装 net-snmp 的开发库

yum install net-snmp-devel net-snmp-utils
1
编译安装 Nagios 插件，请前往 这里。

配置监控网络设备

配置过程：

加载网络设备配置文件
主机配置
服务配置
加载网络设备配置文件

在安装 Nagios 核心的过程中，已经自动生成了一个用于监控网络设备的配置文件，默认情况下核心是不加载这个配置的。因此，需要编辑核心配置文件

vi /usr/local/nagios/etc/nagios.cfg
1
去掉下边这行的注释

#cfg_file=/usr/local/nagios/etc/objects/switch.cfg
1
主机配置

编辑 /usr/local/nagios/etc/objects/switch.cfg，可以看到如下主机配置，将 address 修改为您的网络设备地址。

define host {
    use         generic-switch          ; Inherit default values from a template
    host_name   linksys-srw224p         ; The name we're giving to this switch
    alias       Linksys SRW224P Switch  ; A longer name associated with the switch
    address     192.168.1.253           ; IP address of the switch
    hostgroups  allhosts,switches       ; Host groups this switch is associated with
}
1
2
3
4
5
6
7
use：使用的主机模板，generic-switch 是 Nagios 自带的一个用于监控网络设备的主机模板，相关设置可以到 /usr/local/nagios/etc/objects/templates.cfg 中查看。
服务配置

1 监控丢包及延迟

define service {
    use                     generic-service                    
    host_name               linksys-srw224p                    
    service_description     PING                               
    check_command           check_ping!200.0,20%!600.0,60%    
    normal_check_interval   5                                  
    retry_check_interval    1                                   
    }
1
2
3
4
5
6
7
8
use：使用的监控服务模板
check_command： 丢包大于 20% 或延迟高于 200 毫秒则触发 WARNING 级别报警，丢包大于 60% 或延迟高于 600 毫秒则触发 CRITICAL 级别报警。
normal_check_interval：常态下的检测频次，每 5 分钟检测 1 次
retry_check_interval：异常状态下重试，每 1 分钟检测 1 次。
关于后边两个参数，之后会在其它文章详细介绍。

2 通过 snmp 协议监控状态信息

如果网络设备不支持 snmp 协议，此部分请略过。

define service {
    use                 generic-service
    host_name           linksys-srw224p
    service_description Uptime
    check_command       check_snmp!-C public -o sysUpTime.0
}
1
2
3
4
5
6
check_command ： “-C public” 只是 snmp 团体名，”-o sysUpTime.0” 指示哪一个 OID 会被检查。
3 流量监控

如果你使用 MRTG 监控交换机或路由器的带宽占用，那么就可以通过 Nagios 来进行监控报警。这里你需要设置存储 MRTG 日志的地址，Nagios 可以根据这个日志进行分析。

define service {
    use                 generic-service ; Inherit values from a template
    host_name           linksys-srw224p
    service_description Port 1 Bandwidth Usage
    check_command       check_local_mrtgtraf!/var/lib/mrtg/192.168.1.253_1.log!AVG!1000000,2000000!5000000,5000000!10
}
1
2
3
4
5
6
如上设置， /var/lib/mrtg/192.168.1.253_1.log 设置了 check_local_mrtgtraf 需要访问的日志文件；AVG 设置获取平均带宽占用数据； 1000000,2000000 定义了 WARNING 级别的报警参数，传入流量大于 1M 字节或 传出流量大于 2M 字节； 5000000,5000000 定义了 CRITICAL 级别的报警参数，传入流量大于 5M 字节或 传出流量大于 5M 字节；10 指示如果 MRTG 的日志文件没有及时更新（10分钟未更新），则触发 CRITICAL 级别的报警。

上边就是通过 Nagios 监控网络设备的基本方法，通过 snmp 协议仍然可以监控更多的信息，例如端口状态等等，并且通过社区也可以获取特定网络设备的监控插件。
 