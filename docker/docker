

#下载一个镜像
docker pull registry:2

#启动registry
docker run -d -p 5000:5000 --restart=always --name registry -v /opt/registry:/var/lib/registry registry:2

#打标记
docker tag centos 192.168.116.148:5000/centos
#上传
docker push 192.168.116.148:5000/centos






#查找镜像 httpd,redis,nginx等
docker search 镜像名

#下载一个镜像
docker pull centos:7
docker pull ubuntu:16.04
docker pull redis
docker pull nginx
docker pull mongo
docker pull mysql：5.6
docker pull zookeeper:3.4.11  


cd /opt
mkdir downloads

#将镜像文件保存到指定文件
docker save -o /opt/downloads/zookeeper-image.tar zookeeper:3.4.11  
docker save -o /opt/downloads/ubuntu-image.tar ubuntu:16.04 
docker save -o /opt/downloads/centos-image.tar centos:7
docker save -o /opt/downloads/redis-image.tar redis  
docker save -o /opt/downloads/nginx-image.tar nginx  
docker save -o /opt/downloads/mongo-image.tar mongo  
docker save -o /opt/downloads/mysql-image.tar mysql:5.6 



#上传镜像到私服中共其他用户使用


#从私服中下载镜像



#启动zookeeper
docker run --name zookeeper-1 --restart always -d zookeeper:3.4.11  

#启动zookeeper客户端
docker exec -it 容器id zkCli.sh  

#加载镜像
docker load -i /opt/images/zookeeper-image.tar  



#列出本机上的镜像列表
docker images

#例如使用Tag为16.04的ubuntu镜像来运行容器
docker run -t -i ubuntu:16.04 /bin/bash 

exit 退出镜像

#生成镜像-m:提交的描述信息   -a:指定镜像作者    e218edb10161：容器ID     runoob/ubuntu:v2:指定要创建的目标镜像名
docker commit -m="web项目" -a="lyt" e218edb10161 lyt/ubuntu:web.1




#创建nginx目录
mkdir -p ~/nginx/www ~/nginx/logs ~/nginx/conf
vi nginx.conf
#nginx启动
cd
#-p 80:80：将容器的80端口映射到主机的80端口
#--name mynginx：将容器命名为mynginx
#-v $PWD/www:/www：将主机中当前目录下的www挂载到容器的/www
#-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf：将主机中当前目录下的nginx.conf挂载到容器的/etc/nginx/nginx.conf
#-v $PWD/logs:/wwwlogs：将主机中当前目录下的logs挂载到容器的/wwwlogs
docker run -p 80:80 --name mynginx -v $PWD/www:/www -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf -v $PWD/logs:/wwwlogs  -d nginx  




#移除网路配置
docker network rm 名称
#设置ip段和网路名
docker network create --subnet=172.18.0.0/16 mynetwork
#网络查看
docker network ls
#使用指定的网路，设置ip
docker run -itd --net mynetwork --ip 172.18.0.11 lyt/centos:basic /bin/bash


docker run -p 127.0.0.1:22005:22 -it --net mynetwork --ip 172.18.0.5 nginx /bin/bash




#安装基本工具
yum install net-tools.x86_64 wget curl opensshd



#启动nginx，设置端口
docker run -p 127.0.0.1:22011:22 lyt/centos:basic /bin/bash


#启动centos  自动分配ip 
docker run -t -i nginx /bin/bash 






#登录容器
docker attach 容器id  

docker run -p 127.0.0.1:22011:22 lyt/centos:basic /bin/bash


#安装基本工具
yum install net-tools.x86_64 wget curl opensshd
#生成镜像
docker commit -m="centos含基本工具包，network，sshd，wget，curl " -a="lyt" db90d742f695 lyt/centos:basic
#导出镜像
docker save -o /opt/downloads/centos-basic-image.tar lyt/centos:basic



#查看已启动的容器
docker ps 
#停止容器
docker stop  容器id




#移除网路配置
docker network rm 名称
#设置ip段和网路名
docker network create --subnet=172.18.0.0/16 mynetwork
#网络查看
docker network ls
#使用指定的网路，设置ip
docker run -itd --net mynetwork --ip 172.18.0.11 lyt/centos:basic /bin/bash

