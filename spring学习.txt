配置文件：

	<context:component-scan base-package="com.controller"  >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>




	<!-- 多线程 -->
    <bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
    	<!-- 线程池维护线程的最少数量 -->  
		<property name ="corePoolSize" value ="5" />  
    	<!-- 线程池维护线程所允许的空闲时间 -->  
		<property name ="keepAliveSeconds" value ="30000" />  
    	<!-- 线程池维护线程的最大数量 -->  
		<property name ="maxPoolSize" value ="1000" />  
    	<!-- 线程池所使用的缓冲队列 -->  
		<property name ="queueCapacity" value ="200" />  
	</bean>




	 <aop:config proxy-target-class="true" >
     	<aop:aspect id="my-aspect1" ref="jmsAdvice">
       		<aop:pointcut id="pointcut1" expression="execution(* com.shineyue.wt.log.controller.*.*(..))"/>
       		<aop:after method="afterShow" pointcut-ref="pointcut1" />
       		<aop:after-returning method="afterReturnShow" pointcut-ref="pointcut1"/>
       		<aop:after-throwing method="afterThrowingShow" pointcut-ref="pointcut1"/>
       		<aop:around method="aroundShow" pointcut-ref="pointcut1"/>
    	</aop:aspect>
  	</aop:config>

  <!-- 生成切面通知的bean -->
  <bean id="jmsAdvice" class="com.shineyue.wt.log.aop.JmsAdvice"/>







<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping> 
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:springapplication.xml,
		</param-value>
	</context-param> 
	<listener>
	   <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<welcome-file-list>
		<welcome-file>/login.html</welcome-file>
	</welcome-file-list>
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>







	<mvc:annotation-driven />
	<context:component-scan base-package="com.pallasli.website.login" />
	<mvc:resources location="/html/" mapping="/html/**" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>









request.getHeader("Referer")
request.getHeader("User-Agent")












	<!-- spring-security配置 -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>









