数据库管理员的基础课程
1、分布式文件系统HDFS简介
2、HDFS的系统组成介绍
3、HDFS的组成部分详解
4、副本存放策略及路由规则
5、NameNode Federation
6、命令行接口
7、Java接口
8、客户端与HDFS的数据流讲解
9、HDFS的可用性（HA）



常见的分布式文件系统有，GFS、HDFS、Lustre 、Ceph 、GridFS 、mogileFS、TFS、FastDFS等。各自适用于不同的领域。它们都不是系统级的分布式文件系统，而是应用级的分布式文件存储服务。

Google学术论文，这是众多分布式文件系统的起源

Google File System（大规模分散文件系统） 
MapReduce （大规模分散FrameWork） 
BigTable（大规模分散数据库） 
Chubby（分散锁服务）  


GFS（Google File System）Google公司为了满足本公司需求而开发的基于Linux的专有分布式文件系统。并没有开源。 

下面分布式文件系统都是类 GFS的产品。

HDFS

Hadoop 实现了一个分布式文件系统（Hadoop Distributed File System），简称HDFS。 

Hadoop是文本搜索库。它起源于Apache Nutch，后者是一个开源的网络搜索引擎，本身也是Luene项目的一部分。Aapche Hadoop架构是MapReduce算法的一种开源应用，是Google开创其帝国的重要基石。

Ceph : 性能最高，C++编写的代码，太不成熟了

Lustre : 大规模的、安全可靠的，具备高可用性的集群文件系统，它是由SUN公司开发和维护的。 
该项目主要的目的就是开发下一代的集群文件系统，可以支持超过10000个节点，数以PB的数据量存储系统。 
目前Lustre已经运用在一些领域，例如HP SFS产品等。



适合存储小文件、图片的分布文件系统研究

用于图片等小文件大规模存储的分布式文件系统调研 
架构高性能海量图片服务器的技术要素 
nginx性能改进一例（图片全部存入google的leveldb） 
FastDFS分布文件系统 
TFS（Taobao File System）安装方法 
动态生成图片 Nginx + GraphicsMagick



MogileFS

由memcahed的开发公司danga一款perl开发的产品，目前国内使用mogielFS的有图片托管网站yupoo等。 
MogileFS是一套高效的文件自动备份组件，由Six Apart开发，广泛应用在包括LiveJournal等web2.0站点上。 
MogileFS由3个部分组成： 
　　第1个部分是server端，包括mogilefsd和mogstored两个程序。前者即是 mogilefsd的tracker，它将一些全局信息保存在数据库里，例如站点domain,class,host等。后者即是存储节点(store node)，它其实是个HTTP Daemon，默认侦听在7500端口，接受客户端的文件备份请求。在安装完后，要运行mogadm工具将所有的store node注册到mogilefsd的数据库里，mogilefsd会对这些节点进行管理和监控。 
　　第2个部分是utils（工具集），主要是MogileFS的一些管理工具，例如mogadm等。 
　　第3个部分是客户端API，目前只有Perl API(MogileFS.pm)、PHP，用这个模块可以编写客户端程序，实现文件的备份管理功能。

mooseFS: 支持FUSE，相对比较轻量级，对master服务器有单点依赖，用perl编写，性能相对较差，国内用的人比较多 
 
FastDFS

是一款类似Google FS的开源分布式文件系统，是纯C语言开发的。 
FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。 
官方论坛 http://bbs.chinaunix.net/forum-240-1.html 
FastDfs google Code http://code.google.com/p/fastdfs/ 
分布式文件系统FastDFS架构剖析 http://www.programmer.com.cn/4380/

TFS

TFS（Taobao !FileSystem）是一个高可扩展、高可用、高性能、面向互联网服务的分布式文件系统，主要针对海量的非结构化数据，它构筑在普通的Linux机器 集群上，可为外部提供高可靠和高并发的存储访问。TFS为淘宝提供海量小文件存储，通常文件大小不超过1M，满足了淘宝对小文件存储的需求，被广泛地应用 在淘宝各项应用中。它采用了HA架构和平滑扩容，保证了整个文件系统的可用性和扩展性。同时扁平化的数据组织结构，可将文件名映射到文件的物理地址，简化 了文件的访问流程，一定程度上为TFS提供了良好的读写性能。 
官网 ： http://code.taobao.org/p/tfs/wiki/index/

GridFS文件系统

MongoDB是一种知名的NoSql数据库，GridFS是MongoDB的一个内置功能，它提供一组文件操作的API以利用MongoDB存储文件，GridFS的基本原理是将文件保存在两个Collection中，一个保存文件索引，一个保存文件内容，文件内容按一定大小分成若干块，每一块存在一个Document中，这种方法不仅提供了文件存储，还提供了对文件相关的一些附加属性（比如MD5值，文件名等等）的存储。文件在GridFS中会按4MB为单位进行分块存储。 







HDFS，即Hadoop Distributed File System。它是为以流的方式存取大文件而设计的，适用于几百MB，GB以及TB，并一次写入多次读取的场合。HDFS是为达到高数据吞吐量而优化的，这有可能会以延迟为代价，所以，对于低延时数据访问、大量小文件、同时写和任意的文件修改，它并不是十分适合。


构成HDFS主要是Namenode(master)和一系列的Datanodes(workers)。
Namenode是管理HDFS的目录树和相关的文件元数据，这些信息是以“namespace image”和“edit log”两个文件形式存放在本地磁盘，但这些文件是在HDFS每次重启的时候重新构造出来。
Datanode则是存取文件实际内容的节点，Datanodes会定时地将block的列表汇报给Namenode。


Namenode是元数据存放的地方，所以其错误容忍能力相当重要，一般使用将元数据持久存储在本地或远程的机器上，或使用secondary namenode来定期同步Namenode的元数据。如果Namenode出现了故障，一般会将原Namenode中持久化的元数据拷贝到secondary namenode中，使secondary namenode作为新的Namenode运行。

Namenode, Datanode, Client之间的通信都是建立在TCP/IP的基础之上。当Client要执行一个读取操作的时候，向远程的Namenode发起RPC请求，Namenode会视情况返回文件的部分或全部block列表；对每个block，Namenode都会返回有该block拷贝的Datanode地址，客户端开发库会选取离客户端最接近的Datanode来读取block；读完当前block后，关闭与当前Datanode连接，为读取下一个block寻找最佳Datanode；读取完一个block都会进行checksum验证，如果读取有误，Client会通知Namenode，然后再从下一批拥有该block拷贝的Datanode继续读取。



1.1.5 文件写入 

1) Client向NameNode发起文件写入的请求。 2) NameNode根据文件大小和文件块配置情况，返回给Client它所管理部分DataNode的信息。 3) Client将文件划分为多个Block，根据DataNode的地址信息，按顺序写入到每一个DataNode块中。

1.1.6 文件读取

1) Client向NameNode发起文件读取的请求。 2) NameNode返回文件存储的DataNode的信息。 3) Client读取文件信息。 
HDFS典型的部署是在一个专门的机器上运行NameNode，集群中的其他机器各运行一个DataNode；也可以在运行NameNode的机器上同时运行DataNode，或者一台机器上运行多个DataNode。一个集群只有一个NameNode的设计大大简化了系统架构。 
















