centos在国内发展较快，所谓的性能问题应会逐渐被解决。

1. 安装docker
#检查版本 要求64位，内核>3.10
uname -r

使用root或sudo执行
#更新yum资源
yum -y update
#两种安装方式
yum -y install docker-io
#curl -fsSL https://get.docker.com/ | sh

vi /etc/sysconfig/docker
# /etc/sysconfig/docker

# Modify these options if you want to change the way the docker daemon runs

OPTIONS='--selinux-enabled=false  --log-driver=journald --signature-verification=false'
if [ -z "${DOCKER_CERT_PATH}" ]; then
    DOCKER_CERT_PATH=/etc/docker
fi

:wq 


#启动docker
service docker start
#测试docker
docker run hello-world


#添加镜像加速
#网易加速器：http://hub-mirror.c.163.com
#官方中国加速器(只含一些公有镜像)：https://registry.docker-cn.com
#ustc的镜像：https://docker.mirrors.ustc.edu.cn


vi /etc/docker/daemon.json

{
  "registry-mirrors": ["http://hub-mirror.c.163.com"]
}


docker pull registry
docker pull nginx
docker pull zookeeper
docker pull consul
docker pull node
docker pull haproxy
docker pull openjdk
docker pull tomcat:7
docker pull tomcat:8
docker pull solr
docker pull storm
docker pull webcenter/activemq 
docker pull redis
docker pull memcached
docker pull jenkins
docker pull redmine
docker pull idoop/zentao
docker pull ubuntu:16.04
docker pull mongo:3
docker pull mysql:5.6
docker pull httpd
docker pull wurstmeister/kafka
docker pull garethflowers/svn-server
docker pull sebp/elk
docker pull sonatype/nexus
docker pull robertoandrade/jitsi-meet
docker pull wordpress  cms建站平台 php 
docker pull rocket.chat
docker pull apache/nutch
docker pull google/cadvisor  docker 监控
docker pull stilliard/pure-ftpd
docker pull probablyfine/flume
docker pull eroadltd/jmeter
docker pull tvial/docker-mailserver
 
docker pull cloudera/quickstart 

docker pull rabbitmq:management


#私有仓库需要越狱Google创建账号
#启动镜像私有仓库，默认存储路径为 /opt/data/registry
docker run -d -p 5000:5000 registry 

docker login

#标记镜像
docker tag
#将标记的镜像上传到私有仓库
docker push

#下载镜像
docker pull 

#根据以下命令，编写项目启动文件



#使用守护进程-d 80端口映射 nginx 镜像的80端口,挂载配置文件
docker run --name nginx -p 80:80 -v $PWD/www:/www -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf -v $PWD/logs:/wwwlogs  -d nginx
#将主机中当前目录下的test挂载到容器的/usr/local/tomcat/webapps/test，  --privileged=true 给予权限
docker run --privileged=true --name tomcat -p 8080:8080 -v $PWD/test:/usr/local/tomcat/webapps/test -d tomcat  


#安装jenkins
docker pull jenkins
#jenkins要求文件所属用户为1000
mkdir jenkins
chown -R 1000:1000 jenkins/
#启动
docker run --privileged=true --name jenkins -p 8081:8080 -p 50000:50000  -v $PWD/jenkins:/var/jenkins_home -d jenkins

#访问地址
http://192.168.1.10:8081/

cat jenkins/secrets


#镜像资源地址
https://hub.docker.com/ 


#安装svn （svnsever）
mkdir svn
docker run \
    --name svn-server \
    -d \
    --privileged=true  -v $PWD/svn:/var/opt/svn \
    -p 8082:3690 \
    garethflowers/svn-server

#使用svnadmin创建仓库
docker exec -it svn-server svnadmin create repos

修改 repos/conf下的配置文件

vi svnserve.conf配置如下：

[general]
anon-access = none　　　　#使非授权用户无法访问
auth-access = write　　　　#使授权用户有写权限
password-db = passwd　　#指明密码文件路径
authz-db = authz　　　　　#访问控制文件

配置用户： vi passwd 配置说明如下：

[users]
user1 = 123　　　　#用户名 = 密码
user2 = 123　　　　#用户名 = 密码

配置权限：vi authz 常用配置说明如下：

[group]
group1 = user1,user2　　#组中用户与passwd中对应

[repo:/]
user1 = rw　　　　　 #单用户
@group1 = rw　　　　#@表示组
*=r　　　　　　　　　 #表示所有用户

仓库下目录配置
[repo:/folder1]　　　　#仓库下的folder1目录，权限配置与上面相同





















#启动docker监控，
mkdir -p /var/run /var/lib/docker /dev/disk 

mount -o remount,rw '/cadvisor/sys/fs/cgroup'
sudo ln -s /sys/fs/cgroup/cpu,cpuacct /sys/fs/cgroup/cpuacct,cpu

docker run \
  --privileged=true \
  --volume=/:/rootfs:ro \
  --volume=/var/run:/var/run:rw \
  --volume=/var/lib/docker/:/var/lib/docker:ro \
  --publish=10001:8080 \
  --detach=true \
  --name=cadvisor \
  google/cadvisor:latest


  --volume=/sys:/sys:ro \



#启动nginx
mkdir /nginx

docker run \
   --privileged=true \ 
   --name nginx \
   -p 80:80 \
   -d \
   nginx

   -v /nginx/nginx.conf:/etc/nginx/nginx.conf:ro \
#启动Tomcat

#启动Jenkins

#启动elk
#需要先修改主机的配置
vi /etc/sysctl.conf 

vm.max_map_count=655360

sysctl -p

#5601 (Kibana web interface).
#9200 (Elasticsearch JSON interface).
#5044 (Logstash
docker run \
-p 5601:5601 -p 9200:9200 -p 9300:9300 -p 5044:5044 \
-ti --name elk sebp/elk
 
#启动rabbitmq
  

sudo docker run -d --name rabbitmq -p 5671:5671 -p 5672:5672 -p 4369:4369 -p 25672:25672 -p 15671:15671 -p 15672:15672 rabbitmq:management
