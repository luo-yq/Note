## 环信 WebIM sdk    ytli1987@163.com  870705

测试环信WebIM请访问 https://webim.easemob.com。
登录可以使用环信UIDemo的账号和密码（见http://www.easemob.com/demo)
环信WebIM快速入门文档请见：https://github.com/easemob/web-im/blob/master/sdk/quickstart.md
更多关于环信的开发文档请见：https://docs.easemob.com

##目录
<pre>
|---README.MD：
|---index.html：demo首页，包含sdk基础功能和浏览器兼容性的解决方案

|---static/：
	js/：
		easemob.im.config.js：sdk集成需要修改的配置文件
	css/：
	img/：
	sdk/：/*sdk相关文件*/
		release.txt：各版本更新细节
		quickstart.md：环信WebIM快速入门文档
		easemob.im-1.1.1.js：js sdk
		easemob.im.shim.js：支持老版本sdk api
		strophe.js：sdk依赖脚本
</pre>





初始化

创建连接 
var conn = new WebIM.connection({
    https: WebIM.config.https,
    url: WebIM.config.xmppURL,
    isAutoLogin: WebIM.config.isAutoLogin,
    isMultiLoginSessions: WebIM.config.isMultiLoginSessions
});


添加回调函数 
conn.listen({
  onOpened: function ( message ) {          //连接成功回调
    //如果isAutoLogin设置为false，那么必须手动设置上线，否则无法收消息
    conn.setPresence();             
  },  
  onClosed: function ( message ) {},         //连接关闭回调
  onTextMessage: function ( message ) {},    //收到文本消息
  onEmojiMessage: function ( message ) {},   //收到表情消息
  onPictureMessage: function ( message ) {}, //收到图片消息
  onCmdMessage: function ( message ) {},     //收到命令消息
  onAudioMessage: function ( message ) {},   //收到音频消息
  onLocationMessage: function ( message ) {},//收到位置消息
  onFileMessage: function ( message ) {},    //收到文件消息
  onVideoMessage: function ( message ) {},   //收到视频消息
  onPresence: function ( message ) {},       //收到联系人订阅请求、处理群组、聊天室被踢解散等消息
  onRoster: function ( message ) {},         //处理好友申请
  onInviteMessage: function ( message ) {},  //处理群组邀请
  onOnline: function () {},                  //本机网络连接成功
  onOffline: function () {},                 //本机网络掉线
  onError: function ( message ) {}           //失败回调
});


注册
根据用户名/密码/昵称注册环信 Web IM:
var options = { 
  username: "username",
  password: "password",
  nickname: "nickname",
  appKey: "orgName#appName",
  success: function () { },  
  error: function () { }, 
  apiUrl: WebIM.config.apiURL
};   
WebIM.utils.registerUser(options);



登录
根据用户名/密码登录环信 Web IM:
var options = { 
  apiUrl: WebIM.config.apiURL,
  user: "username",
  pwd: "password",
  appKey: "orgName#appName"
};  
conn.open(options);


退出
conn.close();





好友管理

查询好友列表

查询好友列表时，要注意 subscription (both, to, from) 为不同值的处理。此处默认 both 和 to 的为好友，开发者自定义处理，保持跟 APP 端处理一致即可。

conn.getRoster({
  success: function ( roster ) {
    //获取好友列表，并进行好友列表渲染，roster格式为：
    /** [
          {
            jid:"asemoemo#chatdemoui_test1@easemob.com",
            name:"test1",
            subscription: "both"
          }
        ]
    */
    for ( var i = 0, l = roster.length; i < l; i++ ) {
      var ros = roster[i];    
      //ros.subscription值为both/to为要显示的联系人，此处与APP需保持一致，才能保证两个客户端登录后的好友列表一致
      if ( ros.subscription === 'both' || ros.subscription === 'to' ) {
 
      }
    }
  },    
});
添加/删除好友请求

通过 SDK 的 subscribe 和 unsubscribe 进行添加或者删除好友操作，登录用户通过注册 onPresence，监听对方的添加或者删除好友请求，并做相应的处理。

//easemobwebim-sdk中收到联系人订阅请求的处理方法，具体的type值所对应的值请参考xmpp协议规范
var handlePresence = function ( e ) {
  //（发送者希望订阅接收者的出席信息），即别人申请加你为好友
  if ( e.type === 'subscribe' ) {
    //若e.status中含有[resp:true],则表示为对方同意好友后反向添加自己为好友的消息，demo中发现此类消息，默认同意操作，完成双方互为好友；如果不含有[resp:true]，则表示为正常的对方请求添加自己为好友的申请消息。
  }
 
  //(发送者允许接收者接收他们的出席信息)，即别人同意你加他为好友
  if ( e.type === 'subscribed' ) {
 
  }
   
  //（发送者取消订阅另一个实体的出席信息）,即删除现有好友
  if ( e.type === 'unsubscribe' ) {
 
  }
   
  //（订阅者的请求被拒绝或以前的订阅被取消），即对方单向的删除了好友
  if ( e.type === 'unsubscribed' ) {
 
  }
};
添加好友
//发送添加好友请求
conn.subscribe({
  to: "username",
  message: "加个好友呗"
});


同意添加对方为好友
conn.listen({
  onPresence: function ( message ) {
    handlePresence(message);
  }
});
 
 
//收到联系人订阅请求的处理方法，具体的type值所对应的值请参考xmpp协议规范
var handlePresence = function ( e ) {
 
  //对方收到请求加为好友
  if (e.type === 'subscribe') {
   
    /*同意添加好友操作的实现方法*/
    conn.subscribed({
      to: "username",
      message : "[resp:true]"
    });
    conn.subscribe({//需要反向添加对方好友
      to: e.from,
      message : "[resp:true]"
    });
  }
}



拒绝添加对方为好友
conn.listen({
  onPresence: function ( message ) {
    handlePresence(message);
  }
});
 
 
//收到联系人订阅请求的处理方法，具体的type值所对应的值请参考xmpp协议规范
var handlePresence = function ( e ) {
 
  //对方收到请求加为好友
  if (e.type === 'subscribe') {
   
    /*拒绝添加好友的方法处理*/
    conn.unsubscribed({
      to: "username",
      message : "rejectAddFriend"
    });
  }
}


删除好友
conn.removeRoster({
  to: "username",
  success: function () {//删除成功
    conn.unsubscribed({
      to: "username"
    });
  },
  error : function () {}//删除失败
});





发送消息

发送文本消息
var id = conn.getUniqueId();//生成本地消息id
var msg = new WebIM.message('txt', id);//创建文本消息
 
msg.set({
  msg: "msg",
  to: "username",
  success: function ( id，serverMsgId ) {}//消息发送成功回调   
}); 
 
if ( /*如果是发送到群组*/ ) { 
  msg.setGroup("groupchat");
} else if ( /*如果是发送到聊天室*/ ) {
  msg.body.roomType = true;
  msg.setGroup("groupchat");
}   
 
conn.send(msg.body);
发送命令消息

var id = conn.getUniqueId();//生成本地消息id
var msg = new WebIM.message('cmd', id);//创建命令消息
 
msg.set({
  msg: "msg",
  to: "username",
  action : 'action' //用户自定义，cmd消息必填
  ext :{"extmsg":"extends messages"}//用户自扩展的消息内容（群聊用法相同）
  success: function ( id，serverMsgId ) {}//消息发送成功回调   
}); 
 
if ( /*如果是发送到群组*/ ) { 
  msg.setGroup("groupchat");
} else if ( /*如果是发送到聊天室*/ ) {
  msg.body.roomType = true;
  msg.setGroup("groupchat");
}   
 
conn.send(msg.body);
发送附件消息
发送附件消息，SDK自动分两步完成：

上传附件到服务器，并得到服务返回的附件信息等；
发送附件消息，消息体包含附件的基本信息、服务器路径、secret 等；
下面以发送图片为例：


var id = conn.getUniqueId();
var msg = new WebIM.message('img', id);
var input = document.getElementById('pictureInput');//选择图片的input
var file = WebIM.utils.getFileUrl(input);
var allowType = {
  "jpg": true,
  "gif": true,
  "png": true,
  "bmp": true
};
 
if ( file.filetype.toLowerCase() in allowType ) {
  msg.set({
    apiUrl: WebIM.config.apiURL,
    file: file,
    to: "username",
    onFileUploadError: function ( error ) {},//图片上传失败
    onFileUploadComplete: function ( data ) {
      //图片地址：data.uri + '/' + data.entities[0].uuid;
    },
    success: function ( id， serverMsgId ) {},//图片消息发送成功
    flashUpload: WebIM.flashUpload
});
 
if ( /*如果是发送到群组*/ ) { 
  msg.setGroup("groupchat");
} else if ( /*如果是发送到聊天室*/ ) {
  msg.body.roomType = true;
  msg.setGroup("groupchat");
}
 
conn.send(msg.body);

查询群组成员
//根据roomId查询room成员列表
conn.queryRoomMember({
  roomId: roomId,
  success: function ( members ) {
 
  }
});

接收及处理消息

群聊接收及处理消息同单聊，消息体与单聊消息根据 message 的 type 进行区分，单聊为：“chat”，群聊为：“groupchat”，聊天室为：“chatroom”。根据消息的类型进行不同处理即可。
 



 聊天室管理

加入聊天室

conn.joinChatRoom({
    roomId: "roomId"//聊天室Id
});
退出聊天室

conn.quitChatRoom({
    roomId: "roomId"//聊天室Id
});
发送消息

见发送消息。

接收及处理消息

群聊接收及处理消息同单聊，消息体与单聊消息根据 message 的 type 进行区分，单聊为：“chat”，群聊为：“groupchat”，聊天室为：“chatroom”。根据消息的类型进行不同处理即可。

聊天室相关回调

conn.listen({
  onPresence: function ( message ) {
    handlePresence(message);
  }
});
 
 
var handlePresence = function ( e ) {
  /*e.type === 'joinChatRoomSuccess' //加入成功
    e.type === 'deleteGroupChat' //聊天室被删除
    e.type === 'joinChatRoomFailed' //加入失败*/
};





工具类说明

文件上传下载判断

1
2
3
4
5
6
7
8
//是否能上传file
WebIM.utils.isCanUploadFile;
//是否能下载file
WebIM.utils.isCanDownLoadFile ;
//是否设置header
WebIM.utils.hasSetRequestHeader;
//是否设置mimetype
WebIM.utils.hasOverrideMimeType;
表情解析工具类

1
WebIM.utils.parseEmoji(message);
文件上传下载工具类

var fileInfo = WebIM.utils.getFileUrl(fileInputId);
 
 
//上传
var options = {
  appName: 'chatdemoui',
  orgName: 'easemob-demo',
  accessToken: 'YWMtjPPoovCqEeOQs7myPqqaOwAAAUaqNH0a8rRj4PwJLQju6-S47ZO6wYs3Lwo',
  onFileUploadComplete: function ( data ) { //upload file success },
  onFileUploadError: function ( e ) { //upload file error }
};
 
WebIM.utils.uploadFile(options);
 
 
 
//下载
var options = {
  responseType: 'blob',//default blob
  mimeType: 'text/plain; charset=x-user-defined',//default
  url:'http://s1.easemob.com/weiquan2/a2/chatfiles/0c0f5f3a-e66b-11e3-8863-f1c202c2b3ae',
  secret: 'NSgGYPCxEeOou00jZasg9e-GqKUZGdph96EFxJ4WxW-qkxV4',
  accessToken: 'YWMtjPPoovCqEeOQs7myPqqaOwAAAUaqNH0a8rRj4PwJLQju6-S47ZO6wYs3Lwo',
  onFileDownloadComplete: function ( data ) { //download file success },
  onFileDownloadError: function ( e ) { //download file error }
};
 
WebIM.utils.download(options);
发送Ajax请求

var options = {
  dataType: 'text',//default
  success: function () { //handle request success },
  error: function () { //handle request error },
  type: 'post',//default 'post'
  url: 'http://s1.easemob.com/weiquan2/a2/chatfiles/0c0f5f3a-e66b-11e3-8863-f1c202c2b3ae',
  headers: '',//default {}
  data: '';//default null
};
 
WebIM.utils.ajax(options);
截图发送

function onPaste ( e ) {
  if ( e.clipboardData && e.clipboardData.types ) {
    if ( e.clipboardData.items.length > 0 ) {
      if ( /^image\/\w+$/.test(e.clipboardData.items[0].type) ) {
        var blob = e.clipboardData.items[0].getAsFile());
        var url = window.URL.createObjectURL(blob);
        var id = conn.getUniqueId();//生成本地消息id
 
        var msg = new WebIM.message('img', id);
 
        msg.set({
          apiUrl: 'http://a1.easemob.com',
          file: {data: blob, url: url},
          to: 'toUser',
          uploadError: function ( error ) {}, 
          uploadComplete: function ( data ) {},
          success: function ( id，serverMsgId ) {}//消息发送成功回调
        });
         
        if ( /*如果是发送到群组*/ ) { 
          msg.setGroup("groupchat");
        } else if ( /*如果是发送到聊天室*/ ) {
          msg.body.roomType = true;
          msg.setGroup("groupchat");
        }
 
        conn.send(msg.body);
      }
    }
  }
};

