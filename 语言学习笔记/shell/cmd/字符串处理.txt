
study
把首行和尾行互换

@echo off
:: 目的：把首行和尾行互换
:: 思路：
::     提取第一行和最后一行内容(若首行和最后一行是空行，则提取到的是非空的第一行和非空的最后一行内容)，
:: 然后在新文本的首行写入提取到的最后一行，用 findstr 语句过滤掉原文本的第一行和最后一行，在最后一行
:: 之后添加提取到的第一行。
:: 因为 findstr 处理最后一行有条件限制，所以先在最后一行之后生成一个空行，以保证提取的准确性
:: 注意：请保证test.txt中没有敏感字符，没有内容重复的行，并且首行不能为空
:: code by jm 2006-11-5 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=24563
copy test.txt test.bak>nul
echo.>>test.txt
set num=0
setlocal enabledelayedexpansion
for /f "delims=" %%i in (test.txt) do (
    set str=%%i
    set /a num+=1
    if !num! equ 1 set var=%%i
)
>test_.txt echo.%str%
findstr /b /e /v /c:"%str%" /c:"%var%" test.txt>>test_.txt
>>test_.txt echo.%var%
move test.bak test.txt
start test_.txt
goto :eof
@echo off
:: 可以处理首行为空、行内容重复的情况，
:: 注意：因为 findstr /n 统计行数的时候，会忽略最后一个空行
:: 所以，若在最后有空行的话，请保证空行的个数大于1
findstr /n .* test.txt>tmp1.txt
for /f "tokens=1* delims=:" %%i in (tmp1.txt) do (
    if %%i equ 1 set str=%%j
    set line=%%i&set var=%%j
)
>tmp2.txt echo %line%:%var%
findstr /b /v /c:"1:" /c:"%line%:" tmp1.txt>>tmp2.txt
echo 1:%str%>>tmp2.txt
echo.>>tmp2.txt
cd.>result.txt
for /f "tokens=1* delims=:" %%i in (tmp2.txt) do >>result.txt echo.%%j
del /q tmp1.txt tmp2.txt
start result.txt
 Copyright ©2011 lyt. All Rights Reserved.









study
指定文件指定位置的数字

@echo off
:: 把某个目录下所有txt中第三行第四个数字相加
:: code by jm 2006-9-9 CMD@XP
set num=0
setlocal enabledelayedexpansion
:: 其实用skip=2来跳过头两行的效率更高
for %%i in (*.txt) do (
    set file=%%i
    for /f "tokens=1* delims=:" %%j in ('findstr /n . !file!') do (
        set var=%%k
        if %%j equ 3 (set num_=!var:~4,1!)&& set /a num=!num!+!num_!
    )
)
echo   相加后的结果是 %num%
pause
goto :eof
@echo off
:: 把某个目录下所有txt文件中第十行第三列的数字相加
:: code by jm 2006-9-9 CMD@XP
setlocal enabledelayedexpansion
for %%i in (*.txt) do (
    set file=%%i
    set count=0
    for /f "skip=9 tokens=3" %%j in (!file!) do (
       set /a count+=1
       if !count! equ 1 set /a sum+=%%j
    )
)
echo   相加后的结果是 %sum%
pause
 Copyright ©2011 lyt. All Rights Reserved.








study
删除重复的行不保留空行

@echo off
:: 删除重复的行，但不能保留空行
:: 对不符合变量命名规则、变量个数超过限制的文本都无法正确处理
:: code by  youxi01 modified by jm 2006-10-31
(echo 清除重复行后的文件内容：& echo.)>str_.txt
for /f "delims=" %%i in (test.txt) do (
    if not defined %%i set %%i=A & echo %%i>>str_.txt)
start str_.txt
 Copyright ©2011 lyt. All Rights Reserved.







study
查找指定内容行

@echo off
:: 如果1.txt中找到了222，就把此行之下的内容都输到2.txt中去
:: code by jm 2006-9-10 CMD@XP
set count=0
for /f "tokens=*" %%i in (1.txt) do (
    set /a count+=1
    echo %%i|findstr "222">nul && goto :ok
)
goto :eof
:ok
cd.>2.txt
for /f "skip=%count% tokens=*" %%i in (1.txt) do (>>2.txt echo %%i)
 Copyright ©2011 lyt. All Rights Reserved.







study
替换

@echo off
setlocal enabledelayedexpansion
set file=
set /p file=  请输入要操作的文件名称(包括扩展名)：
set "file=%file:"=%"
for %%i in ("%file%") do set file=%%~fi
echo.
set replaced=
set /p replaced= 请输入即将被替换的内容：
echo.
set all=
set /p all=  请输入替换字符串：
for /f "delims=" %%i in ('type "%file%"') do (
    set str=%%i
    set "str=!str:%replaced%=%all%!"
    echo !str!>>"%file%"_tmp.txt
)
copy "%file%" "%file%"_bak.txt >nul 2>nul
move "%file%"_tmp.txt "%file%"
start "" "%file%"
 Copyright ©2011 lyt. All Rights Reserved.





study
文件合并

@echo off
for /f "delims== tokens=1*" %%a in (1.ini) do (
        if not "%%b"=="" (
                if not "%%a"=="分类辅助" (echo\%%a=%%b>>new.ini) else (
                for /f "delims=" %%v in ('find "分类辅助" ^<2.ini') do echo\%%v>>new.ini
                )
        ) else (echo\%%a>>new.ini)
)
del 1.ini
ren new.ini 1.ini
 Copyright ©2011 lyt. All Rights Reserved.






study
反序显示输入

@echo off
:: 反序显示输入，能处理 数字+字母(区分大小写)+符号 格式的混合型输入
:: 区分大小写
:: 稍加改造，可以实现密码的枚举？
:: 不能处理的字符：
:: 管道符号：|
:: 重定向符号：<、>
:: 连接符号：&
:: 脱字或逃逸符号：%、^
:: 其他符号：?、*、)、=、;、"
:: code by jm 2006-9-7 CMD@XP
cls
set input=
set /p input=           请输入一个字符串 
set output=
if not "%input%"=="" set input=%input%
:loop
for %%i in (0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ` ~ ! @ # $ ^( - + . / \ [ ] { } : ') do (
    (if %input:~-1% equ %%i set output=%output%%%i)&&set input=%input:~0,-1%
)
if not "%input%"=="" goto :loop
echo        反序显示输入，结果是 %output%
pause
 Copyright ©2011 lyt. All Rights Reserved.







study
文件复制
：：文件内容拷贝
more tmp.txt >test.txt
 ：：文件剪切重命名
move tmp.txt  test.txt
 Copyright ©2011 lyt. All Rights Reserved.





study
检测IP格式

@echo off
:: 检测IP格式是否标准
:: code by jm 2006-10-23
:begin
cls
set input=
set /p input=请输入IP：
echo %input%|findstr "^[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*$">nul||goto fail
set _input=%input:.= %
call :check %_input%
:check
if "%4"=="" goto fail
for %%i in (%1 %2 %3 %4) do (
    if %%i gtr 255 goto fail
)
cls
echo %input% 是正确的IP
echo.
pause
goto begin
:fail
cls
echo %input% 是错误的IP
echo.
pause
goto begin
   
 Copyright ©2011 lyt. All Rights Reserved.







study
输出倒文

@echo off 
:star
set Output=
set /p Enter=请输入:
:Start
if not "%Enter%"=="" (
set Output=%Output%%Enter:~-1%
set Enter=%Enter:~0,-1%
goto :Start)
echo.
echo        %Output% 
pause >nul&goto :Star
 Copyright ©2011 lyt. All Rights Reserved.






study
拖曳文件到命令窗口

@echo off
:: 保留空行替换字符串
:: 当行首有冒号时会抛掉最开始的几个连续冒号(这个问题可以解决)
:: 会忽略以分号开头的行
:: 不能正确处理感叹号(因为启用了变量延迟)
:: code by jm modify on 2006-11-1
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=22033
set file=
set /p file=  请把要处理的文件拉到本窗口：
set "file=%file:"=%"
for %%i in ("%file%") do set "file=%%~fi"
echo.
set replaced=
set /p replaced= 请输入即将被替换的内容：
echo.
set all=
set /p all=  请输入替换字符串：
cd.>"%file%_tmp.txt"
setlocal enabledelayedexpansion
for /f "tokens=1* delims=:" %%i in ('findstr /n .* "%file%"') do (
    set str=%%j
    if not "!str!"=="" set "str=!str:%replaced%=%all%!"
    >>"%file%_tmp.txt" echo.!str!
)
copy "%file%" "%file%_bak.txt" >nul 2>nul
move "%file%_tmp.txt" "%file%"
start "" "%file%"
 Copyright ©2011 lyt. All Rights Reserved.








study
计算字符串长度

@echo off & setlocal EnableDelayedExpansion
:: 计算字符串的长度
:: code by willsort 2006-3-30  CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=19819
:began
set mystr=
set /p mystr=输入要计算长度的字符串(直接回车退出):
if not defined mystr goto :eof
for /l %%i in (0,1,1000) do if "!mystr:~%%i,1!"=="" set strlen=%%i && goto :_endfor
:_endfor
::echo 字符串:  "%mystr%"
echo 长  度:  %strlen%
set strlen=
goto began
该方案的缺陷是：当字符串长度超过1000的时候，将不能探测到；不过变量能接收的长度好象还不能超过1000
另外一种方案：
@echo off
:: Based on willsort's codes code by JM 2006-10-9 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=19819
set mystr=
set /p mystr=输入要计算长度的字符串(直接回车退出):
if not defined mystr goto :eof
set count=0
setlocal enabledelayedexpansion
:intercept
set /a count+=1
for /f %%i in ("%count%") do if not "!mystr:~%%i,1!"=="" goto intercept
echo 长  度:  %count%
pause
goto :eof
@echo off
:: code by 3742668 2006-3-29 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=19819
:began
set /p mystr=输入要计算长度的字符串:
echo %mystr:~0,1% | findstr /i "q" 1>nul 2>nul && exit  rem 输入q退出
call :bflen "%mystr%"       rem 这两句调用bflen，返回长度到变量ret中。
echo 字符串:        "%mystr%"
echo 长  度:        %ret%
goto began
:bflen        rem 真麻烦，初始化要单独拿出来。
set num=
set str=
set ret=
set str=%1
:len          rem 计算字符串长度
set str=%str:~0,-1%
set /a num = %num% + 1
if defined str goto len
set /a ret = %num% - 2
set num=
goto :eof
 Copyright ©2011 lyt. All Rights Reserved.







study
多行文本拼接成一行

@echo off
:: 把多行文本拼接成用;连接的一行
:: <nul 不能省略，省略掉就无法运行下去
for /f "tokens=*" %%i in (源文件.txt) do set /p "var=%%i;" <nul >>目标文件.txt
exit
另一种方法：
set tmpstr=
setlocal enabledelayedexpansion
for /f "tokens=*" %%i in (1.txt) do set tmpstr=!tmpstr! %%i
echo %tmpstr%
pause
exit
还有一种不启用变量延迟的方法，能兼容除英文双引号外的所有特殊字符：
@echo off
:: code by jm 2006-12-14
for /f "delims=" %%i in (1.txt) do call set "var=%%var%%%%i"
echo "%var%"
pause
 @echo off
:: 每6行拼接为一行，剩余的不够6行的显示在最后一行
:: code by jm thanks to 3742668    2006-9-21 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=23312
set num=0
setlocal enabledelayedexpansion
for /f "delims=" %%i in (a.txt) do (
    set /a num+=1
    set str=!str! %%i
    if !num! equ 6 echo !str! && set num=0 & set str=
)
if not "%str%"=="" echo %str%
pause
 
 拼接相临的奇偶行文本内容
 常规解法：
@echo off
:: code by jm 2006-9-21 CMD@XP
set /a num=1
setlocal enabledelayedexpansion
for /f "tokens=*" %%i in (1.txt) do (
    set /a num+=1
    set /a mod=!num!%%2
    if !mod! equ 1 (set var=%%i) else (set str=%%i)
    if !mod! equ 1 echo !str!    !var!
)
pause
goto :eof
最简洁最高效的解法：
:run
@echo off
:: code by 3742668 2006-9-21 CMD@XP
setlocal ENABLEDELAYEDEXPANSION
for /f "delims=" %%i in (1.txt) do (
    if "!str!" == "" ( set str=%%i
                     ) else (
                             echo !str!    %%i
                             set str=
                            )
    )
pause
 Copyright ©2011 lyt. All Rights Reserved.







study
去掉字符串不同部位的空格

@echo off
:: 去掉左空格
:: Code by JM 2006-11-28 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=25172
set "str=   ab c&>!   " 
for /f "tokens=*" %%i in ("%str%") do echo "☆%%i☆"
pause
goto :eof
@echo off
:: 去掉左空格
:: Code by JM 2006-11-28 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=25172
set "str=   ab c&>!   " 
:intercept
if "%str:~0,1%"==" " set "str=%str:~1%"&goto intercept
echo "☆%str%☆"
pause
goto :eof
@echo off
:: 去掉右空格
:: Code by JM 2006-11-28 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=25172
set "str=   ab c&>!   " 
:intercept
if "%str:~-1%"==" " set "str=%str:~0,-1%"&goto intercept
echo "☆%str%☆"
pause
goto :eof
@echo off
:: 去掉首尾空格空格
:: Code by JM 2006-11-28 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=25172
set "str=   ab c&>!   "
:intercept_left
if "%str:~0,1%"==" " set "str=%str:~1%"&goto intercept_left
:intercept_right
if "%str:~-1%"==" " set "str=%str:~0,-1%"&goto intercept_right
echo "☆%str%☆"
pause
goto :eof
@echo off
:: 去掉所有空格空格
:: Code by JM 2006-11-28 CMD@XP
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=25172
set "str=   ab c&>!   " 
set "str=%str: =%"
echo "☆%str%☆"
pause
goto :eof
@echo %dbg% off
cls && echo. && echo.
:Redtek 2006 去左、右含有空格的变量试验与另类方法实现演示
::  为演示与另做它用方便，所以“标签代码段”内的代码都可以独立使用
:: 出处：http://www.cn-dos.net/forum/viewthread.php?tid=25172
set "var=               My name is Redtek            "
rem  注：下面 Call 中的参数是无引号的，利用参数以逗号空格等做为分隔的特性
call :去左侧空格  %var%
echo. && echo.
call :去右侧空格  "%var%"
rem  去字符串中的左、右空格
rem  为演示与另做它用的方便，下面步骤将重新编写去左右空格的代码段，可以独立使用。
echo. && echo.
call :去两边空格  "%var%"  %var%
goto :eof

:去左侧空格
        rem  利用替换原理，将变量 var 中 以 ^%1变量内容开头字串的左边一切替换为^1本身
        rem  因为被 Call 过来以后，参数中的空格就全“丢了”（利用参数分隔的特性），
        rem  所以，自然那个要被定位的 ^%1 左边的空格也就全没了。
        call set "去左空格后的变量=%%var:*%1=%1%%
        echo  原字符串：                [%var%]
        echo  去左侧空格后的字符串：        [%去左空格后的变量%]
        goto  :eof

:去右侧空格
        rem 将结果赋值给变量，这个变量可以随便调用。
        rem ~nx 是利用了“将变量扩展到一个文件名”的特性，
        rem 既然是合法的文件名，当然文件名后面的空格是无效且无用的～：）
        set 去右空格后的变量=%~nx1
        echo  原字符串：                [%var%]
        echo  去右侧空格后的字符串：        [%去右空格后的变量%]
        goto  :eof        
       
:去两边空格
        rem 原理：先去左边空格，再去右边空格，相当于上面演示代码的合用：）
        rem 　　　在假如没有上面两段去左和去右空格的代码情况下，下面独立演示：
        set 去左右空格后的变量=%~nx1
        call set "去左右空格后的变量=%%去左右空格后的变量:*%2=%2%%"
        echo  原字符串：                [%var%]
        echo  去左右空格后的字符串：        [%去左右空格后的变量%]
        goto :eof
 Copyright ©2011 lyt. All Rights Reserved.







study
去掉字符串头所有的0

@echo off
:: 去掉字符串头所有的0
:: code by 3742668 CMD@XP
    for /f "delims=0 tokens=*" %%i in ("0009029") do echo %%i
    pause>nul
goto :eof
@echo off
:: code by jm 2006-10-20 CMD@XP
set var=0002304500
:intercept
set var=%var:*0=%
if "%var:~0,1%"=="0" goto intercept
echo %var%
pause

@echo off
:: 去掉字符串头所有的0
:: code by 无奈何 2006-10-2 CMD@XP
set x=00010280
call :sub %x%
echo %y%
pause
goto :EOF
:sub
set y=%1
if "%y:~0,1%"=="0" call :sub %y:~1%
goto :EOF
@echo off
:: 去掉字符串头所有的0
:: set count=-1必须用-1而不能用0
:: code by JM 2006-10-10
set num=0003
set count=-1
setlocal enabledelayedexpansion
:loop
set /a count+=1
if "!num:~%count%,1!"=="0" goto loop
echo !num:~%count%!
pause
 Copyright ©2011 lyt. All Rights Reserved.







study
中文显示ping结果

@echo off
color f2
echo.
set for=于
set of=的
set with=用
set in=(以
set data:=数据
set milli-seconds:=毫秒为单位)
set Approximate=大约
set times=时间:
set round=来回
set trip=行程
set Reply=应答
set from=来自
set bytes=字节
set time=时间:
set timed=时间
set out=超过
set statistics=统计
set Packets:=包:
set Sent=已发送=
set Received=已收到=
set Lost=已丢失=
set loss)=丢失)
set Minimum=最小值=
set Maximum=最大值=
set Average=平均值=
set TTL=TTL=
setlocal enabledelayedexpansion
set a=
set/p a=请输入要ping的网址或IP   
for /f "delims=" %%i in ('ping %a%') do (
    set ret=
    for %%a in (%%i) do if defined %%a (set ret=!ret!!%%a!) else set ret=!ret! %%a 
    if not "!ret!"=="" (set ret=!ret:time=时间! && echo !ret!) else echo.
)
pause>nul
 Copyright ©2011 lyt. All Rights Reserved.



