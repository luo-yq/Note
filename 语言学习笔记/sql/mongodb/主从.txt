MongoDB副本集设置
在本教程中我们使用同一个MongoDB来做MongoDB主从的实验， 操作步骤如下：
1、关闭正在运行的MongoDB服务器。
现在我们通过指定 --replSet 选项来启动mongoDB。--replSet 基本语法格式如下：
mongod --port "PORT" --dbpath "YOUR_DB_DATA_PATH" --replSet "REPLICA_SET_INSTANCE_NAME"
实例
mongod --port 27017 --dbpath "D:\set up\mongodb\data" --replSet rs0
以上实例会启动一个名为rs0的MongoDB实例，其端口号为27017。
启动后打开命令提示框并连接上mongoDB服务。
在Mongo客户端使用命令rs.initiate()来启动一个新的副本集。
我们可以使用rs.conf()来查看副本集的配置
查看副本集姿态使用 rs.status() 命令
副本集添加成员
添加副本集的成员，我们需要使用多条服务器来启动mongo服务。进入Mongo客户端，并使用rs.add()方法来添加副本集的成员。
语法
rs.add() 命令基本语法格式如下：
>rs.add(HOST_NAME:PORT)
实例
假设你已经启动了一个名为mongod1.net，端口号为27017的Mongo服务。 在客户端命令窗口使用rs.add() 命令将其添加到副本集中，命令如下所示：
>rs.add("mongod1.net:27017")
>
MongoDB中你只能通过主节点将Mongo服务添加到副本集中， 判断当前运行的Mongo服务是否为主节点可以使用命令db.isMaster() 。
MongoDB的副本集与我们常见的主从有所不同，主从在主机宕机后所有服务将停止，而副本集在主机宕机后，副本会接管主节点成为主节点，不会出现宕机的情况。



主从同步：

md01    10.0.0.11        master
md02    10.0.0.12        slave
md03    10.0.0.14        slave

#建立数据库目录

mkdir -p /elain/apps/mongodb/ 
mkdir -p /elain/data/mongodb/db/ 
mkdir -p /elain/logs/mongodb/ 
注：   
1、不需要像mysql一样复制完整数据过去，丛库启动会制动复制主库完整数据。
2、丛库自动配置为只读。
3、mongodb第一次启动时间较长，需要注意等待。
4、管理命令多数都要在admin库中执行 use admin

相关参数：./mongod --help
--autoresync 当发现从服务器的数据不是最新时，开始从主服务器请求同步数据
--slavedelay 同步延迟，单位：秒

主-从
作为主服务器启动

/elain/apps/mongodb/bin/mongod --fork --master --oplogSize=4096 --port 27001 --dbpath /elain/data/mongodb/db --logpath /elain/logs/mongodb/mongodb.log 
作为从服务器启动，并指明主服务器地址。--autoresync为强制从主服务器同步全部数据

/elain/apps/mongodb/bin/mongod --fork --slave --source 10.0.0.11:27001 --port 27001 --dbpath /elain/data/mongodb/db --logpath /elain/logs/mongodb/mongodb.log  
注：可以在启动从时加以下常用参数
--slavedelay 10      #延时复制 单位为秒
--autoresync         #自动重新同步
--only               #复制指定的数据库，默认复制所有的库
--oplogSize          #主节点的oplog日志大小，单位为M，建议设大点(更改oplog大小时，只需停主库，删除local.*，然后加--oplogSize=* 重新启动即可,*代表大小)

如果发现主从不同步，从上手动同步

db.runCommand({"resync":1}) 
状态查询

db.runCommand({"isMaster":1})  
#主还是从

在丛库上查询主库地址

db.printCollectionStats(); 
#查看主从复制状态

db.printReplicationInfo(); 
测试主从
在主服务器新建数据库

> db.printReplicationInfo(); 
this is a slave, printing slave replication info. 
source:   10.0.0.11:27001 
         syncedTo: Sun Oct 09 2011 18:37:12 GMT+0800 (CST) 
                 = 19 secs ago (0.01hrs) 

>db.printSlaveReplicationInfo(); 
#此为同步过来的数据，测试成功

附加：

添加及删除源：
启动从节点时可以用--source指定主节点，也可以在shell中配置这个源，

启动一个从，端口为27002

/elain/apps/mongodb/bin/mongod --fork --slave  --port 27002 --dbpath /elain/data/mongodb/testdb --logpath /elain/logs/mongodb/mongodb.log 
登录：

若复制中使用了认证，需在local库中添加repl用户来复制

>user local; 
> db.addUser("repl", "elain123"); 

附录一、Slave 顶替 Master
如果主服务器 10.0.0.11 宕机了,
此时需要用 10.0.0.12 机器来顶替 master 服务,

步骤如下:
#停止 10.0.0.12 进程(mongod)

kill -2 `ps -ef|grep mongod|grep -v grep|awk '{print $2}'` 
#删除 10.0.0.12 数据目录中的 local.*

rm -rf /elain/data/mongodb/db/local.* 
#以--master 模式启动 10.0.0.12

/elain/apps/mongodb/bin/mongod --fork --master --oplogSize=4096 --port 27001 --dbpath /elain/data/mongodb/db --logpath /elain/logs/mongodb/mongodb.log 
附录二、切换 Master/Slave 角色
切换主库10.0.0.11和从库10.0.0.12的角色

步骤如下:（命令略）

用 fsync 命令暂停 主库 上的写操作,
关闭 从库 上的服务
清空 从库 上的 local.*文件
用-master 选项重启 从库 服务
在 从库 上执行一次写操作,初始化 oplog,获得一个同步起始点
关闭 从库 服务,此时 从库 已经有了新的 local.*文件
关闭 主库 服务,并且用 从库 上新的 local.*文件来代替 主库 上的 local.*文件(建议先压缩再COPY)
用-master 选项重启 从库 服务
在启动slave的选项上加一个-fastsync 选项来重启 主库 服务

