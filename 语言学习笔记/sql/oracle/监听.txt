
study
listener

三个配置文件 listener.ora、sqlnet.ora、tnsnames.ora ，都是放在$ORACLE_HOME\network\admin目录下。
1. sqlnet.ora-----作用类似于linux或者其他unix的nsswitch.conf文件，通过这个文件来决定怎么样找一个连接中出现的连接字符串。
例如我们客户端输入
sqlplus sys/oracle@orcl
假如我的sqlnet.ora是下面这个样子
SQLNET.AUTHENTICATION_SERVICES= (NTS)
NAMES.DIRECTORY_PATH= (TNSNAMES,HOSTNAME)
那么，客户端就会首先在tnsnames.ora文件中找orcl的记录.如果没有相应的记录则尝试把orcl当作一个主机名，通过网络的途径去解析它的 ip地址然后去连接这个ip上GLOBAL_DBNAME=orcl这个实例，当然我这里orcl并不是一个主机名
如果我是这个样子
NAMES.DIRECTORY_PATH= (TNSNAMES)
那么客户端就只会从tnsnames.ora查找orcl的记录,括号中还有其他选项，如LDAP等并不常用。
2. Tnsnames.ora------这个文件类似于unix 的hosts文件，提供的tnsname到主机名或者ip的对应，只有当sqlnet.ora中类似
NAMES.DIRECTORY_PATH= (TNSNAMES) 这样，也就是客户端解析连接字符串的顺序中有TNSNAMES是，才会尝试使用这个文件。
PROTOCOL：客户端与服务器端通讯的协议，一般为TCP，该内容一般不用改。
HOST：数据库侦听所在的机器的机器名或IP地址，数据库侦听一般与数据库在同一个机器上，所以当我说数据库侦听所在的机器一般也是指数据库所在的机 器。在UNIX或WINDOWS下，可以通过在数据库侦听所在的机器的命令提示符下使用hostname命令得到机器名，或通过ipconfig(for WINDOWS) or ifconfig（for UNIX）命令得到IP地址。需要注意的是，不管用机器名或IP地址，在客户端一定要用ping命令ping通数据库侦听所在的机器的机器名，否则需要在 hosts文件中加入数据库侦听所在的机器的机器名的解析。
PORT：数据库侦听正在侦听的端口，可以察看服务器端的listener.ora文件或在数据库侦听所在的机器的命令提示符下通过lnsrctl status [listener name]命令察看。此处Port的值一定要与数据库侦听正在侦听的端口一样。
SERVICE_NAME：在服务器端，用system用户登陆后，sqlplus> show parameter service_name命令察看。
ORCL 对应的本机，SALES对应的另外一个IP地址，里边还定义了使用主用服务器还是共享服务器模式进行连接
#你所要连接的时候输入得TNSNAME
ORCL =
(DESCRIPTION =
(ADDRESS_LIST =
#下面是这个TNSNAME对应的主机，端口，协议
(ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521))
)
(CONNECT_DATA =
#使用专用服务器模式去连接需要跟服务器的模式匹配，如果没有就根据服务器的模式自动调节
(SERVER = DEDICATED)
#对应service_name，SQLPLUS>;show parameter service_name; 进行查看
(SERVICE_NAME = orcl)
)
)
#下面这个类似
SALES =
(DESCRIPTION =
(ADDRESS_LIST =
(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.188.219)(PORT = 1521))
)
(CONNECT_DATA =
(SERVER = DEDICATED)
(SERVICE_NAME = sales)
)
)
注意：如果数据库服务器用MTS，客户端程序需要用database link时最好明确指明客户端用dedicated直连方式,不然会遇到很多跟分布式环境有关的ORACLE BUG。一般情况下数据库服务器用直接的连接会好一些，除非你的实时数据库连接数接近1000。
3. listener.ora------listener监听器进程的配置文件
关于listener进程就不多说了，接受远程对数据库的接入申请并转交给oracle的服务器进程。所以如果不是使用的远程的连接，listener进程就不是必需的，同样的如果关闭listener进程并不会影响已经存在的数据库连接。
Listener.ora文件的例子
#listener.ora Network Configuration File: #E:\oracle\product\10.1.0\Db_2\NETWORK\ADMIN\listener.ora
# Generated by Oracle configuration tools.
#下面定义LISTENER进程为哪个实例提供服务 这里是ORCL，并且它对应的ORACLE_HOME和GLOBAL_DBNAME 其中GLOBAL_DBNAME不是必需的除非
#使用HOSTNAME做数据库连接
SID_LIST_LISTENER =
(SID_LIST =
(SID_DESC =
(GLOBAL_DBNAME = boway)
(ORACLE_HOME = E:\oracle\product\10.1.0\Db_2)
(SID_NAME = ORCL)
)
)
#监听器的名字，一台数据库可以有不止一个监听器
#再向下面是监听器监听的协议，ｉｐ，端口等，这里使用的ｔｃｐ１５２１端口，并且使＃用的是主机名
LISTENER =
(DESCRIPTION =
(ADDRESS = (PROTOCOL = TCP)(HOST = boway)(PORT = 1521))
)
上面的例子是一个最简单的例子，但也是最普遍的。一个listener进程为一个instance(SID)提供服务。
监听器的操作命令
$ORACLE_HOME/bin/lsnrctl start,其他诸如stop,status等。具体敲完一个lsnrctl后看帮助。
上面说到的三个文件都可以通过图形的配置工具来完成配置
$ORACLE_HOME/netca 向导形式的
$ORACLE_HOME/netmgr
本人比较习惯netmgr,
profile 配置的是sqlnet.ora也就是名称解析的方式
service name 配置的是tnsnames.ora文件
listeners配置的是listener.ora文件，即监听器进程
具体的配置可以尝试一下然后来看一下配置文件。
这样一来总体结构就有了，是
当你输入sqlplus sys/oracle@orcl的时候
1． 查询sqlnet.ora看看名称的解析方式，发现是TNSNAME
2． 则查询tnsnames.ora文件，从里边找orcl的记录，并且找到主机名，端口和service_name
3． 如果listener进程没有问题的话，建立与listener进程的连接。
4． 根据不同的服务器模式如专用服务器模式或者共享服务器模式，listener采取接下去的动作。默认是专用服务器模式，没有问题的话客户端就连接上了数据库的server process。
5． 这时候网络连接已经建立，listener进程的历史使命也就完成了。
#---------------
几种连接用到的命令形式
1.sqlplus / as sysdba 这是典型的操作系统认证，不需要listener进程
2.sqlplus sys/oracle 这种连接方式只能连接本机数据库，同样不需要listener进程
3.sqlplus sys/oracle@orcl 这种方式需要listener进程处于可用状态。最普遍的通过网络连接。
以上连接方式使用sys用户或者其他通过密码文件验证的用户都不需要数据库处于可用状态，操作系统认证也不需要数据库可用，普通用户因为是数据库认证，所以数据库必需处于open状态。
init.ora中的Remote_Login_Passwordfile对身份验证的影响
三个可选值：
NONE：默认值，指示Oracle系统不使用密码文件，通过操作系统进行身份验证的特权用户拥有SYSORA和SYSOPER权限
EXCLUSIVE：
1.表示只有一个数据库实例可以使用密码文件
2.允许将SYSORA和SYSOPER权限赋值给SYS以外的其它用户
SHARED:
1.表示可以有多个数据库实例可以使用密码文件
2.不允许将SYSORA和SYSOPER权限赋值给SYS以外的其它用户
所以，如果要以操作系统身份登录，Remote_Login_Passwordfile应该设置为NONE
当登录用户不是ORA_DBA组和ORA_OPER组成员时，登录数据库需要在Oracle中创建当前操作系统用户相同的用户名，如果当前用户是域用 户，则名称为:domainname\yourname,如果是本地计算机用户，则名称为：computername\yourname
创建方法：
create "domainname\yourname" identified externally;
操作系统，修改HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE\HOME0下面添加AUTH_PREFIX_DOMAIN，值设为FALSE,在创建Oracle用户时可以忽略 掉域名
这种方式下，init.ora中有一个参数将影响数据库如何匹配一个windows用户和Oracle用户os_authent_prefix = ""
缺省为空，Oracle8i以前，无该参数，而使用OPS$作为用户名前缀.(Oracle用户名最大长度限制为30个字符)
关于域名(主机名)解析 
/etc/hosts (UNIX)
或者windows\hosts(WIN98) winnt\system32\drivers\etc\hosts (WIN2000)
客户端需要写入数据库服务器IP地址和主机名的对应关系。
127.0.0.1 localhost
192.168.0.35 oracledb oracledb
192.168.0.45 tomcat tomcat
202.84.10.193 bj_db bj_db
有些时候我们配置好第一步后，tnsping 数据库服务器别名显示是成功的，
但是sqlplus username/password@servicename不通,jdbc thin link 也不通的时候, 
一定不要忘了在客户端做这一步，原因可能是DNS服务器里没有设置这个服务器IP地址和主机名的对应关系。
如果同时有私有IP和Internet上公有IP，私有IP写在前面，公有IP写在后面。
编辑前最好留一个备份，增加一行时也最好用复制粘贴，避免编辑hosts时空格或者tab字符错误。
UNIX下ORACLE多数据库的环境，OS客户端需要配置下面两个环境变量
ORACLE_SID=appdb;export ORACLE_SID
TWO_TASK=appdb;export TWO_TASK 
来指定默认的目标数据库
#-------------
平时排错可能会用到的
1．lsnrctl status查看服务器端listener进程的状态
LSNRCTL>; help
The following operations are available
An asterisk (*) denotes a modifier or extended command:
start stop status
services version reload
save_config trace change_password
quit exit set*
show*
LSNRCTL>; status
:em11:
2．tnsping 查看客户端sqlnet.ora和tnsname.ora文件的配置正确与否，及对应的服务器的listener进程的状态。
C:\>tnsping orcl
TNS Ping Utility for 32-bit Windows: Version 10.1.0.2.0 - Production on 16-8月 -
2005 09:36:08
Copyright (c) 1997, 2003, Oracle. All rights reserved.
Used parameter files:
E:\oracle\product\10.1.0\Db_2\network\admin\sqlnet.ora
Used TNSNAMES adapter to resolve the alias
Attempting to contact (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)
(HOST = 127.0.0.1)(PORT = 1521))) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_
NAME = orcl)))
OK (20 msec)
3．
SQL>;show sga 查看instance是否已经启动
SQL>; select open_mode from v$database; 查看数据库是打开还是mount状态。
OPEN_MODE
----------
READ WRITE

使用hostname访问数据库而不是tnsname的例子
使用tnsname访问数据库是默认的方式，但是也带来点问题，那就是客户端都是需要配置tnsnames.ora文件的。如果你的数据库服务器地址发生改变，就需要重新编辑客户端这个文件。通过hostname访问数据库就没有了这个麻烦。
需要修改
服务器端listener.ora
#监听器的配置文件listener.ora
#使用host naming则不再需要tnsname.ora文件做本地解析
# listener.ora Network Configuration File: d:\oracle\product\10.1.0\db_1\NETWORK\ADMIN\listener.ora
# Generated by Oracle configuration tools.
SID_LIST_LISTENER =
(SID_LIST =
(SID_DESC =
# (SID_NAME = PLSExtProc)
(SID_NAME = orcl)
(GLOBAL_DBNAME = boway)
(ORACLE_HOME = d:\oracle\product\10.1.0\db_1)
# (PROGRAM = extproc)
)
)
LISTENER =
(DESCRIPTION_LIST =
(DESCRIPTION =
(ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC))
)
(DESCRIPTION =
(ADDRESS = (PROTOCOL = TCP)(HOST = boway)(PORT = 1521))
)
)
客户端sqlnet.ora 如果确认不会使用TNSNAME访问的话，可以去掉TNSNAMES
# sqlnet.ora Network Configuration File: d:\oracle\product\10.1.0\db_1\NETWORK\ADMIN\sqlnet.ora
# Generated by Oracle configuration tools.
SQLNET.AUTHENTICATION_SERVICES= (NTS)
NAMES.DIRECTORY_PATH= (HOSTNAME)
Tnsnames.ora文件不需要配置，删除也无所谓。
下面就是网络和操作系统的配置问题了，怎么样能够解析我的主机名的问题了
可以通过下面的方式连接
sqlplus sys/oracle@boway
这样的话，会连接boway这台服务器，并且listener来确定你所要连接的service_name
常见故障解决办法：
TNS-12154 (ORA-12154)：TNS:could not resolve service name
该错误表示用于连接的网络服务名在tnsnames.ora文件中不存在，如上面的tnsnames.ora中的网络服务名只有test，假如用户在连接时用sqlplus system/manager@test1则就会给出TNS-12154错误。
要注意的是，有时即使在tnsnames.ora文件中有相应的网络服务名，可是用该网络服务名连接时还会出错，出现这种情况的典型配置如下（在客户端的机器上）：
sqlnet.ora文件：
NAMES.DIRECTORY_PATH = (TNSNAMES, ….)
NAMES.DEFAULT_DOMAIN = server.com
tnsnames.ora文件:
test =
(DESCRIPTION=
(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=testserver)(PORT=1521))
)
(CONNECT_DATA=(SERVICE_NAME=orcl.testserver.com)
)
)
sql*plus运行基本机理：
在用户输入sqlplus system/manager@test后，sqlplus程序会自动到sqlnet.ora文件中找NAMES.DEFAULT_DOMAIN参数，假 如该参数存在，则将该参数中的值取出，加到网络服务名的后面，即此例中你的输入由sqlplus system/manager@test自动变为sqlplus system/manager@test.server.com ，然后再到tnsnames.ora文件中找test.server.com网络服务名，这当然找不到了，因为该文件中只有test网络服务名，所以报 错。解决的办法就是将sqlnet.ora文件中的NAMES.DEFAULT_DOMAIN参数注释掉即可，如 #NAMES.DEFAULT_DOMAIN = server.com。假如NAMES.DEFAULT_DOMAIN参数不存在，则sqlplus程序会直接到tnsnames.ora文件中找 test网络服务名，然后取出其中的host，port，tcp，service_name，利用这些信息将连接请求发送到正确的数据库服务器上。
另外原则上tnsnames.ora中的配置不区分大小写，但是我的确遇到区分大小写的情况，所以最好将使用的网络服务与tnsnames.ora中配置的完全一样。
ORA-12514: TNS:listener could not resolve SERVICE_NAME given in connect Descriptor.
该错误表示能在tnsnames.ora中找到网络服务名，但是在tnsnames.ora中指定的SERVICE_NAME与服务器端的 SERVICE_NAME不一致。解决的办法是修改tnsnames.ora中的SERVICE_NAME。
易混淆术语介绍：
Db_name：对一个数据库（Oracle database）的唯一标识，该数据库为Oracle database。这种表示对于单个数据库是足够的，但是随着由多个数据库构成的分布式数据库的普及，这种命令数据库的方法给数据库的管理造成一定的负 担，因为各个数据库的名字可能一样，造成管理上的混乱。为了解决这种情况，引入了Db_domain参数，这样在数据库的标识是由Db_name和 Db_domain两个参数共同决定的，避免了因为数据库重名而造成管理上的混乱。这类似于互连网上的机器名的管理。我们将Db_name和 Db_domain两个参数用’.’连接起来，表示一个数据库，并将该数据库的名称称为Global_name，即它扩展了Db_name。 Db_name参数只能由字母、数字、’_’、’#’、’$’组成，而且最多8个字符。
Db_domain：定义一个数据库所在的域，该域的命名同互联网的’域’没有任何关系，只是数据库管理员为了更好的管理分布式数据库而根据实际情况决定的。当然为了管理方便，可以将其等于互联网的域。
Global_name：对一个数据库（Oracle database）的唯一标识，oracle建议用此种方法命令数据库。该值是在创建数据库是决定的，缺省值为Db_name. Db_domain。在以后对参数文件中Db_name与Db_domain参数的任何修改不影响Global_name的值，如果要修改 Global_name，只能用ALTER DATABASE RENAME GLOBAL_NAME TO <db_name.db_domain>命令进行修改，然后修改相应参数。
Service_name：该参数是oracle8i新引进的。在8i以前，我们用SID来表示标识数据库的一个实例，但是在Oracle的并行环境中， 一个数据库对应多个实例，这样就需要多个网络服务名，设置繁琐。为了方便并行环境中的设置，引进了Service_name参数，该参数对应一个数据库， 而不是一个实例，而且该参数有许多其它的好处。该参数的缺省值为Db_name. Db_domain，即等于Global_name。一个数据库可以对应多个Service_name，以便实现更灵活的配置。该参数与SID没有直接关 系，即不必Service name 必须与SID一样。
Net service name：网络服务名，又可以称为数据库别名（database alias）。是客户端程序访问数据库时所需要，屏蔽了客户端如何连接到服务器端的细节，实现了数据库的位置透明的特性。
如何利用配置的网络服务名连接到数据库：
用sqlplus程序通过test网络服务名进行测试，如sqlplus system/manager@test。如果不能连接到数据库，则在tnsname.ora文件中的test网络服务名（net service）后面加上Oracle数据库的DB_Domain参数值，通过用sqlplus> show parameter db_domain命令察看。此处db_domain参数值为testserver.com，将其加到网络服务名后面，修改后的tnsname.ora中 关于该网络服务名的内容为：

应该改为：
如何利用配置的网络服务名连接到数据库：
用sqlplus程序通过test网络服务名进行测试,如果不能连接到数据库，则在tnsname.ora文件中的test网络服务名（net service）后面加上sqlnet.ora文件中NAMES.DEFAULT_DOMAIN参数的值，此处我的参数值为 testserver.com，将其加到网络服务名后面，修改后的tnsname.ora中关于该网络服务名的内容为：
什么情况下会引起oracle自动设置NAMES.DEFAULT_DOMAIN参数？
出现这种情况的典型环境为windows的客户端的‘我得电脑à属性à计算机名à更改à其它…à此计算机的主DNS后缀’中设置了‘primary dns suffix’，因为在这种情况下安装客户端时，会在sqlnet.ora文件中自动设置NAMES.DEFAULT_DOMAIN参数，或许当把计算机 加入域中安装oracle客户端时也会出现这种情况，有条件的话大家可以试一下。
我在设置oracle的客户端时一般手工修改tnsnames.ora文件，但是还有许多人喜欢用图形工具配置，该图形工具最终还是修改tnsnames.ora文件，但是它有时会引起其它的问题：
在用oracle的图形配置软件''net assistant''或‘Net Configuration Assistant’配置网络服务名时，假如已经设置了‘primary dns suffix’，但是在图形配置软件中写的网络服务名的名字中没有‘primary dns suffix’，如只是写了test，则图形配置软件会自动在后面加上‘primary dns suffix’，使之变为test.testserver.com，并存在tnsnames.ora中，而不管你的sqlnet.ora文件中是否有 NAMES.DEFAULT_DOMAIN参数。此时，用图形工具进行测试连接是通过的，但是假如此时sqlnet.ora文件中没有 NAMES.DEFAULT_DOMAIN参数，则你在使用网络服务名时应该使用在tnsnames.ora中的 test.testserver.com，而不是你在图形配置软件中键入的test。解决的办法为：
<1>可以在sqlnet.ora文件中设置NAMES.DEFAULT_DOMAIN= testserver.com，这时你可以用test或test.testserver.com连接数据库
<2>在sqlnet.ora文件中不设置NAMES.DEFAULT_DOMAIN参数，在tnsnames.ora文件中将 test.testserver.com中的.testserver.com去掉，这时你可以用test连接数据库
 Copyright ©2011 lyt. All Rights Reserved.